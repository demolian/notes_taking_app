{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';// Import CSS\nimport{supabase}from'./supabase/supabaseClient';import imageCompression from'browser-image-compression';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[notes,setNotes]=useState([]);const[title,setTitle]=useState('');const[content,setContent]=useState('');const[image,setImage]=useState(null);const[editingId,setEditingId]=useState(null);useEffect(()=>{fetchNotes();},[]);// Fetch notes from Supabase\nasync function fetchNotes(){const{data,error}=await supabase.from('notes').select('*').order('created_at',{ascending:false});if(error){alert('Error: '+error.message);// Use alert for web\n}else if(data){setNotes(data);}}// Upload an image to Supabase Storage and return its public URL\nasync function uploadImage(file){try{// Ensure the file is a valid Blob or File\nif(!(file instanceof Blob||file instanceof File)){throw new Error('The file given is not an instance of Blob or File');}// Compress the image\nconst options={maxSizeMB:1,maxWidthOrHeight:800,useWebWorker:true};const compressedFile=await imageCompression(file,options);const fileName=`${Date.now()}.jpg`;const{data,error}=await supabase.storage.from('notes-images').upload(fileName,compressedFile,{cacheControl:'3600',upsert:false});if(error){console.error('Supabase upload error:',error);throw error;}// Get public URL\nconst result=supabase.storage.from('notes-images').getPublicUrl(data.path);if(!result.data.publicUrl){throw new Error('Error getting public URL');}const publicUrl=result.data.publicUrl;return publicUrl;}catch(err){console.error('Image upload error:',err);alert('Upload Error: '+(err.message||'Image upload failed'));return null;}}// Pick an image using the device's image library\nasync function pickImage(){// Web implementation using a file input\nconst input=document.createElement('input');input.type='file';input.accept='image/*';// Limit to image files\ninput.onchange=async event=>{const file=event.target.files[0];if(file){setImage(file);// Set the File object directly\n}};input.click();// Programmatically trigger the file input\n}// Create or update a note\nasync function saveNote(){let imageUrl=null;let oldImageUrl=null;// Store the old image URL\n// If editing, get the existing note's image URL\nif(editingId){const{data:existingNote,error:existingNoteError}=await supabase.from('notes').select('image_url').eq('id',editingId).single();if(existingNoteError){alert('Error getting existing note: '+existingNoteError.message);// Use alert for web\nreturn;}oldImageUrl=existingNote===null||existingNote===void 0?void 0:existingNote.image_url;}if(image){const uploadedUrl=await uploadImage(image);if(uploadedUrl){imageUrl=uploadedUrl;}else{alert('Error: Failed to upload image.');// Use alert for web\nreturn;}}const timestamp=new Date().toISOString();if(editingId){const{error}=await supabase.from('notes').update({title,content,image_url:imageUrl,updated_at:timestamp}).eq('id',editingId);if(error)alert('Error updating note: '+error.message);// Use alert for web\nelse{alert('Note updated');// Use alert for web\n}// Delete the old image if it was replaced\nif(oldImageUrl&&imageUrl!==oldImageUrl){const oldImagePath=oldImageUrl.split('/').pop();if(oldImagePath){const{error:storageError}=await supabase.storage.from('notes-images').remove([oldImagePath]);if(storageError){console.error('Error deleting old image from storage',storageError.message);alert('Note updated, but error deleting old image: '+storageError.message);// Use alert for web\n}else{console.log('Old image deleted from storage');}}}}else{const{error}=await supabase.from('notes').insert([{title,content,image_url:imageUrl,created_at:timestamp,updated_at:timestamp}]);if(error)alert('Error creating note: '+error.message);// Use alert for web\nelse{alert('Note created');// Use alert for web\n}}// Reset form and refresh\nsetTitle('');setContent('');setImage(null);setEditingId(null);fetchNotes();}// Delete a note\nasync function deleteNote(id){// Get the note to retrieve the image URL\nconst{data:noteData,error:noteError}=await supabase.from('notes').select('image_url').eq('id',id).single();if(noteError){alert('Error getting note: '+noteError.message);// Use alert for web\nreturn;}const imageUrl=noteData===null||noteData===void 0?void 0:noteData.image_url;// Delete the note\nconst{error}=await supabase.from('notes').delete().eq('id',id);if(error){alert('Error deleting note: '+error.message);// Use alert for web\nreturn;}// Delete the image from storage if it exists\nif(imageUrl){const imagePath=imageUrl.split('/').pop();// Extract file name from URL\nif(imagePath){const{error:storageError}=await supabase.storage.from('notes-images').remove([imagePath]);if(storageError){console.error('Error deleting image from storage',storageError.message);alert('Note deleted, but error deleting image: '+storageError.message);// Use alert for web\n}else{console.log('Image deleted from storage');alert('Note and image deleted');// Use alert for web\n}}}else{alert('Note deleted');// Use alert for web\n}fetchNotes();}// Start editing a note\nfunction startEdit(note){setTitle(note.title);setContent(note.content);setImage(note.image_url);setEditingId(note.id);}const renderItem=item=>/*#__PURE__*/_jsxs(\"div\",{className:\"noteCard\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"noteTitle\",children:item.title}),/*#__PURE__*/_jsx(\"p\",{children:item.content}),item.image_url?/*#__PURE__*/_jsx(\"img\",{src:item.image_url,alt:\"Note Image\",className:\"noteImage\"}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"noteActions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>startEdit(item),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteNote(item.id),style:{color:'red'},children:\"Delete\"})]})]});return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"NotesApp\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input\",placeholder:\"Title\",value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(\"textarea\",{className:\"input multiline\",placeholder:\"Content\",value:content,onChange:e=>setContent(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttonRow\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:pickImage,children:\"Pick Image\"}),image&&/*#__PURE__*/_jsx(\"img\",{src:image,alt:\"Preview\",className:\"previewImage\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:saveNote,children:editingId?'Update Note':'Add Note'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"notesList\",children:notes.map(item=>/*#__PURE__*/_jsx(\"div\",{children:renderItem(item)},item.id))})]});}","map":{"version":3,"names":["React","useState","useEffect","supabase","imageCompression","jsx","_jsx","jsxs","_jsxs","App","notes","setNotes","title","setTitle","content","setContent","image","setImage","editingId","setEditingId","fetchNotes","data","error","from","select","order","ascending","alert","message","uploadImage","file","Blob","File","Error","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","fileName","Date","now","storage","upload","cacheControl","upsert","console","result","getPublicUrl","path","publicUrl","err","pickImage","input","document","createElement","type","accept","onchange","event","target","files","click","saveNote","imageUrl","oldImageUrl","existingNote","existingNoteError","eq","single","image_url","uploadedUrl","timestamp","toISOString","update","updated_at","oldImagePath","split","pop","storageError","remove","log","insert","created_at","deleteNote","id","noteData","noteError","delete","imagePath","startEdit","note","renderItem","item","className","children","src","alt","onClick","style","color","placeholder","value","onChange","e","map"],"sources":["V:/Notes_taking_web_app/NotesTakingApp/notes-taking-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css'; // Import CSS\r\nimport { supabase } from './supabase/supabaseClient'; \r\nimport imageCompression from 'browser-image-compression';\r\n\r\nexport default function App() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [editingId, setEditingId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  // Fetch notes from Supabase\r\n  async function fetchNotes() {\r\n    const { data, error } = await supabase\r\n      .from('notes')\r\n      .select('*')\r\n      .order('created_at', { ascending: false });\r\n    if (error) {\r\n      alert('Error: ' + error.message); // Use alert for web\r\n    } else if (data) {\r\n      setNotes(data);\r\n    }\r\n  }\r\n\r\n  // Upload an image to Supabase Storage and return its public URL\r\n  async function uploadImage(file) {\r\n    try {\r\n      // Ensure the file is a valid Blob or File\r\n      if (!(file instanceof Blob || file instanceof File)) {\r\n        throw new Error('The file given is not an instance of Blob or File');\r\n      }\r\n\r\n      // Compress the image\r\n      const options = {\r\n        maxSizeMB: 1,\r\n        maxWidthOrHeight: 800,\r\n        useWebWorker: true,\r\n      };\r\n      const compressedFile = await imageCompression(file, options);\r\n\r\n      const fileName = `${Date.now()}.jpg`;\r\n\r\n      const { data, error } = await supabase.storage\r\n        .from('notes-images')\r\n        .upload(fileName, compressedFile, { cacheControl: '3600', upsert: false });\r\n\r\n      if (error) {\r\n        console.error('Supabase upload error:', error);\r\n        throw error;\r\n      }\r\n\r\n      // Get public URL\r\n      const result = supabase.storage\r\n        .from('notes-images')\r\n        .getPublicUrl(data.path);\r\n      if (!result.data.publicUrl) {\r\n        throw new Error('Error getting public URL');\r\n      }\r\n      const publicUrl = result.data.publicUrl;\r\n      return publicUrl;\r\n    } catch (err) {\r\n      console.error('Image upload error:', err);\r\n      alert('Upload Error: ' + (err.message || 'Image upload failed'));\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Pick an image using the device's image library\r\n  async function pickImage() {\r\n    // Web implementation using a file input\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = 'image/*'; // Limit to image files\r\n\r\n    input.onchange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        setImage(file); // Set the File object directly\r\n      }\r\n    };\r\n\r\n    input.click(); // Programmatically trigger the file input\r\n  }\r\n\r\n  // Create or update a note\r\n  async function saveNote() {\r\n    let imageUrl = null;\r\n    let oldImageUrl = null; // Store the old image URL\r\n\r\n    // If editing, get the existing note's image URL\r\n    if (editingId) {\r\n      const { data: existingNote, error: existingNoteError } = await supabase\r\n        .from('notes')\r\n        .select('image_url')\r\n        .eq('id', editingId)\r\n        .single();\r\n\r\n      if (existingNoteError) {\r\n        alert('Error getting existing note: ' + existingNoteError.message); // Use alert for web\r\n        return;\r\n      }\r\n      oldImageUrl = existingNote?.image_url;\r\n    }\r\n\r\n    if (image) {\r\n      const uploadedUrl = await uploadImage(image);\r\n      if (uploadedUrl) {\r\n        imageUrl = uploadedUrl;\r\n      } else {\r\n        alert('Error: Failed to upload image.'); // Use alert for web\r\n        return;\r\n      }\r\n    }\r\n\r\n    const timestamp = new Date().toISOString();\r\n    if (editingId) {\r\n      const { error } = await supabase\r\n        .from('notes')\r\n        .update({\r\n          title,\r\n          content,\r\n          image_url: imageUrl,\r\n          updated_at: timestamp,\r\n        })\r\n        .eq('id', editingId);\r\n\r\n      if (error) alert('Error updating note: ' + error.message); // Use alert for web\r\n      else {\r\n        alert('Note updated'); // Use alert for web\r\n      }\r\n\r\n      // Delete the old image if it was replaced\r\n      if (oldImageUrl && imageUrl !== oldImageUrl) {\r\n        const oldImagePath = oldImageUrl.split('/').pop();\r\n        if (oldImagePath) {\r\n          const { error: storageError } = await supabase.storage\r\n            .from('notes-images')\r\n            .remove([oldImagePath]);\r\n\r\n          if (storageError) {\r\n            console.error(\r\n              'Error deleting old image from storage',\r\n              storageError.message\r\n            );\r\n            alert(\r\n              'Note updated, but error deleting old image: ' +\r\n                storageError.message\r\n            ); // Use alert for web\r\n          } else {\r\n            console.log('Old image deleted from storage');\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      const { error } = await supabase\r\n        .from('notes')\r\n        .insert([\r\n          {\r\n            title,\r\n            content,\r\n            image_url: imageUrl,\r\n            created_at: timestamp,\r\n            updated_at: timestamp,\r\n          },\r\n        ]);\r\n      if (error) alert('Error creating note: ' + error.message); // Use alert for web\r\n      else {\r\n        alert('Note created'); // Use alert for web\r\n      }\r\n    }\r\n    // Reset form and refresh\r\n    setTitle('');\r\n    setContent('');\r\n    setImage(null);\r\n    setEditingId(null);\r\n    fetchNotes();\r\n  }\r\n\r\n  // Delete a note\r\n  async function deleteNote(id) {\r\n    // Get the note to retrieve the image URL\r\n    const { data: noteData, error: noteError } = await supabase\r\n      .from('notes')\r\n      .select('image_url')\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (noteError) {\r\n      alert('Error getting note: ' + noteError.message); // Use alert for web\r\n      return;\r\n    }\r\n\r\n    const imageUrl = noteData?.image_url;\r\n\r\n    // Delete the note\r\n    const { error } = await supabase\r\n      .from('notes')\r\n      .delete()\r\n      .eq('id', id);\r\n\r\n    if (error) {\r\n      alert('Error deleting note: ' + error.message); // Use alert for web\r\n      return;\r\n    }\r\n\r\n    // Delete the image from storage if it exists\r\n    if (imageUrl) {\r\n      const imagePath = imageUrl.split('/').pop(); // Extract file name from URL\r\n      if (imagePath) {\r\n        const { error: storageError } = await supabase.storage\r\n          .from('notes-images')\r\n          .remove([imagePath]);\r\n\r\n        if (storageError) {\r\n          console.error('Error deleting image from storage', storageError.message);\r\n          alert(\r\n            'Note deleted, but error deleting image: ' + storageError.message\r\n          ); // Use alert for web\r\n        } else {\r\n          console.log('Image deleted from storage');\r\n          alert('Note and image deleted'); // Use alert for web\r\n        }\r\n      }\r\n    } else {\r\n      alert('Note deleted'); // Use alert for web\r\n    }\r\n\r\n    fetchNotes();\r\n  }\r\n\r\n  // Start editing a note\r\n  function startEdit(note) {\r\n    setTitle(note.title);\r\n    setContent(note.content);\r\n    setImage(note.image_url);\r\n    setEditingId(note.id);\r\n  }\r\n\r\n  const renderItem = (item) => (\r\n    <div className=\"noteCard\">\r\n      <h3 className=\"noteTitle\">{item.title}</h3>\r\n      <p>{item.content}</p>\r\n      {item.image_url ? (\r\n        <img src={item.image_url} alt=\"Note Image\" className=\"noteImage\" />\r\n      ) : null}\r\n      <div className=\"noteActions\">\r\n        <button onClick={() => startEdit(item)}>Edit</button>\r\n        <button onClick={() => deleteNote(item.id)} style={{ color: 'red' }}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"header\">NotesApp</h1>\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          className=\"input multiline\"\r\n          placeholder=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <div className=\"buttonRow\">\r\n          <button onClick={pickImage}>Pick Image</button>\r\n          {image && (\r\n            <img src={image} alt=\"Preview\" className=\"previewImage\" />\r\n          )}\r\n        </div>\r\n        <button onClick={saveNote}>\r\n          {editingId ? 'Update Note' : 'Add Note'}\r\n        </button>\r\n      </div>\r\n      <div className=\"notesList\">\r\n        {notes.map((item) => (\r\n          <div key={item.id}>{renderItem(item)}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAAE;AACpB,OAASC,QAAQ,KAAQ,2BAA2B,CACpD,MAAO,CAAAC,gBAAgB,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzD,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACiB,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACdkB,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,cAAe,CAAAA,UAAUA,CAAA,CAAG,CAC1B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAnB,QAAQ,CACnCoB,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,YAAY,CAAE,CAAEC,SAAS,CAAE,KAAM,CAAC,CAAC,CAC5C,GAAIJ,KAAK,CAAE,CACTK,KAAK,CAAC,SAAS,CAAGL,KAAK,CAACM,OAAO,CAAC,CAAE;AACpC,CAAC,IAAM,IAAIP,IAAI,CAAE,CACfV,QAAQ,CAACU,IAAI,CAAC,CAChB,CACF,CAEA;AACA,cAAe,CAAAQ,WAAWA,CAACC,IAAI,CAAE,CAC/B,GAAI,CACF;AACA,GAAI,EAAEA,IAAI,WAAY,CAAAC,IAAI,EAAID,IAAI,WAAY,CAAAE,IAAI,CAAC,CAAE,CACnD,KAAM,IAAI,CAAAC,KAAK,CAAC,mDAAmD,CAAC,CACtE,CAEA;AACA,KAAM,CAAAC,OAAO,CAAG,CACdC,SAAS,CAAE,CAAC,CACZC,gBAAgB,CAAE,GAAG,CACrBC,YAAY,CAAE,IAChB,CAAC,CACD,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAlC,gBAAgB,CAAC0B,IAAI,CAAEI,OAAO,CAAC,CAE5D,KAAM,CAAAK,QAAQ,CAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAM,CAEpC,KAAM,CAAEpB,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAnB,QAAQ,CAACuC,OAAO,CAC3CnB,IAAI,CAAC,cAAc,CAAC,CACpBoB,MAAM,CAACJ,QAAQ,CAAED,cAAc,CAAE,CAAEM,YAAY,CAAE,MAAM,CAAEC,MAAM,CAAE,KAAM,CAAC,CAAC,CAE5E,GAAIvB,KAAK,CAAE,CACTwB,OAAO,CAACxB,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,KAAM,CAAAA,KAAK,CACb,CAEA;AACA,KAAM,CAAAyB,MAAM,CAAG5C,QAAQ,CAACuC,OAAO,CAC5BnB,IAAI,CAAC,cAAc,CAAC,CACpByB,YAAY,CAAC3B,IAAI,CAAC4B,IAAI,CAAC,CAC1B,GAAI,CAACF,MAAM,CAAC1B,IAAI,CAAC6B,SAAS,CAAE,CAC1B,KAAM,IAAI,CAAAjB,KAAK,CAAC,0BAA0B,CAAC,CAC7C,CACA,KAAM,CAAAiB,SAAS,CAAGH,MAAM,CAAC1B,IAAI,CAAC6B,SAAS,CACvC,MAAO,CAAAA,SAAS,CAClB,CAAE,MAAOC,GAAG,CAAE,CACZL,OAAO,CAACxB,KAAK,CAAC,qBAAqB,CAAE6B,GAAG,CAAC,CACzCxB,KAAK,CAAC,gBAAgB,EAAIwB,GAAG,CAACvB,OAAO,EAAI,qBAAqB,CAAC,CAAC,CAChE,MAAO,KAAI,CACb,CACF,CAEA;AACA,cAAe,CAAAwB,SAASA,CAAA,CAAG,CACzB;AACA,KAAM,CAAAC,KAAK,CAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAC7CF,KAAK,CAACG,IAAI,CAAG,MAAM,CACnBH,KAAK,CAACI,MAAM,CAAG,SAAS,CAAE;AAE1BJ,KAAK,CAACK,QAAQ,CAAG,KAAO,CAAAC,KAAK,EAAK,CAChC,KAAM,CAAA7B,IAAI,CAAG6B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAClC,GAAI/B,IAAI,CAAE,CACRb,QAAQ,CAACa,IAAI,CAAC,CAAE;AAClB,CACF,CAAC,CAEDuB,KAAK,CAACS,KAAK,CAAC,CAAC,CAAE;AACjB,CAEA;AACA,cAAe,CAAAC,QAAQA,CAAA,CAAG,CACxB,GAAI,CAAAC,QAAQ,CAAG,IAAI,CACnB,GAAI,CAAAC,WAAW,CAAG,IAAI,CAAE;AAExB;AACA,GAAI/C,SAAS,CAAE,CACb,KAAM,CAAEG,IAAI,CAAE6C,YAAY,CAAE5C,KAAK,CAAE6C,iBAAkB,CAAC,CAAG,KAAM,CAAAhE,QAAQ,CACpEoB,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,WAAW,CAAC,CACnB4C,EAAE,CAAC,IAAI,CAAElD,SAAS,CAAC,CACnBmD,MAAM,CAAC,CAAC,CAEX,GAAIF,iBAAiB,CAAE,CACrBxC,KAAK,CAAC,+BAA+B,CAAGwC,iBAAiB,CAACvC,OAAO,CAAC,CAAE;AACpE,OACF,CACAqC,WAAW,CAAGC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEI,SAAS,CACvC,CAEA,GAAItD,KAAK,CAAE,CACT,KAAM,CAAAuD,WAAW,CAAG,KAAM,CAAA1C,WAAW,CAACb,KAAK,CAAC,CAC5C,GAAIuD,WAAW,CAAE,CACfP,QAAQ,CAAGO,WAAW,CACxB,CAAC,IAAM,CACL5C,KAAK,CAAC,gCAAgC,CAAC,CAAE;AACzC,OACF,CACF,CAEA,KAAM,CAAA6C,SAAS,CAAG,GAAI,CAAAhC,IAAI,CAAC,CAAC,CAACiC,WAAW,CAAC,CAAC,CAC1C,GAAIvD,SAAS,CAAE,CACb,KAAM,CAAEI,KAAM,CAAC,CAAG,KAAM,CAAAnB,QAAQ,CAC7BoB,IAAI,CAAC,OAAO,CAAC,CACbmD,MAAM,CAAC,CACN9D,KAAK,CACLE,OAAO,CACPwD,SAAS,CAAEN,QAAQ,CACnBW,UAAU,CAAEH,SACd,CAAC,CAAC,CACDJ,EAAE,CAAC,IAAI,CAAElD,SAAS,CAAC,CAEtB,GAAII,KAAK,CAAEK,KAAK,CAAC,uBAAuB,CAAGL,KAAK,CAACM,OAAO,CAAC,CAAE;AAAA,IACtD,CACHD,KAAK,CAAC,cAAc,CAAC,CAAE;AACzB,CAEA;AACA,GAAIsC,WAAW,EAAID,QAAQ,GAAKC,WAAW,CAAE,CAC3C,KAAM,CAAAW,YAAY,CAAGX,WAAW,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CACjD,GAAIF,YAAY,CAAE,CAChB,KAAM,CAAEtD,KAAK,CAAEyD,YAAa,CAAC,CAAG,KAAM,CAAA5E,QAAQ,CAACuC,OAAO,CACnDnB,IAAI,CAAC,cAAc,CAAC,CACpByD,MAAM,CAAC,CAACJ,YAAY,CAAC,CAAC,CAEzB,GAAIG,YAAY,CAAE,CAChBjC,OAAO,CAACxB,KAAK,CACX,uCAAuC,CACvCyD,YAAY,CAACnD,OACf,CAAC,CACDD,KAAK,CACH,8CAA8C,CAC5CoD,YAAY,CAACnD,OACjB,CAAC,CAAE;AACL,CAAC,IAAM,CACLkB,OAAO,CAACmC,GAAG,CAAC,gCAAgC,CAAC,CAC/C,CACF,CACF,CACF,CAAC,IAAM,CACL,KAAM,CAAE3D,KAAM,CAAC,CAAG,KAAM,CAAAnB,QAAQ,CAC7BoB,IAAI,CAAC,OAAO,CAAC,CACb2D,MAAM,CAAC,CACN,CACEtE,KAAK,CACLE,OAAO,CACPwD,SAAS,CAAEN,QAAQ,CACnBmB,UAAU,CAAEX,SAAS,CACrBG,UAAU,CAAEH,SACd,CAAC,CACF,CAAC,CACJ,GAAIlD,KAAK,CAAEK,KAAK,CAAC,uBAAuB,CAAGL,KAAK,CAACM,OAAO,CAAC,CAAE;AAAA,IACtD,CACHD,KAAK,CAAC,cAAc,CAAC,CAAE;AACzB,CACF,CACA;AACAd,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,EAAE,CAAC,CACdE,QAAQ,CAAC,IAAI,CAAC,CACdE,YAAY,CAAC,IAAI,CAAC,CAClBC,UAAU,CAAC,CAAC,CACd,CAEA;AACA,cAAe,CAAAgE,UAAUA,CAACC,EAAE,CAAE,CAC5B;AACA,KAAM,CAAEhE,IAAI,CAAEiE,QAAQ,CAAEhE,KAAK,CAAEiE,SAAU,CAAC,CAAG,KAAM,CAAApF,QAAQ,CACxDoB,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,WAAW,CAAC,CACnB4C,EAAE,CAAC,IAAI,CAAEiB,EAAE,CAAC,CACZhB,MAAM,CAAC,CAAC,CAEX,GAAIkB,SAAS,CAAE,CACb5D,KAAK,CAAC,sBAAsB,CAAG4D,SAAS,CAAC3D,OAAO,CAAC,CAAE;AACnD,OACF,CAEA,KAAM,CAAAoC,QAAQ,CAAGsB,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEhB,SAAS,CAEpC;AACA,KAAM,CAAEhD,KAAM,CAAC,CAAG,KAAM,CAAAnB,QAAQ,CAC7BoB,IAAI,CAAC,OAAO,CAAC,CACbiE,MAAM,CAAC,CAAC,CACRpB,EAAE,CAAC,IAAI,CAAEiB,EAAE,CAAC,CAEf,GAAI/D,KAAK,CAAE,CACTK,KAAK,CAAC,uBAAuB,CAAGL,KAAK,CAACM,OAAO,CAAC,CAAE;AAChD,OACF,CAEA;AACA,GAAIoC,QAAQ,CAAE,CACZ,KAAM,CAAAyB,SAAS,CAAGzB,QAAQ,CAACa,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAAE;AAC7C,GAAIW,SAAS,CAAE,CACb,KAAM,CAAEnE,KAAK,CAAEyD,YAAa,CAAC,CAAG,KAAM,CAAA5E,QAAQ,CAACuC,OAAO,CACnDnB,IAAI,CAAC,cAAc,CAAC,CACpByD,MAAM,CAAC,CAACS,SAAS,CAAC,CAAC,CAEtB,GAAIV,YAAY,CAAE,CAChBjC,OAAO,CAACxB,KAAK,CAAC,mCAAmC,CAAEyD,YAAY,CAACnD,OAAO,CAAC,CACxED,KAAK,CACH,0CAA0C,CAAGoD,YAAY,CAACnD,OAC5D,CAAC,CAAE;AACL,CAAC,IAAM,CACLkB,OAAO,CAACmC,GAAG,CAAC,4BAA4B,CAAC,CACzCtD,KAAK,CAAC,wBAAwB,CAAC,CAAE;AACnC,CACF,CACF,CAAC,IAAM,CACLA,KAAK,CAAC,cAAc,CAAC,CAAE;AACzB,CAEAP,UAAU,CAAC,CAAC,CACd,CAEA;AACA,QAAS,CAAAsE,SAASA,CAACC,IAAI,CAAE,CACvB9E,QAAQ,CAAC8E,IAAI,CAAC/E,KAAK,CAAC,CACpBG,UAAU,CAAC4E,IAAI,CAAC7E,OAAO,CAAC,CACxBG,QAAQ,CAAC0E,IAAI,CAACrB,SAAS,CAAC,CACxBnD,YAAY,CAACwE,IAAI,CAACN,EAAE,CAAC,CACvB,CAEA,KAAM,CAAAO,UAAU,CAAIC,IAAI,eACtBrF,KAAA,QAAKsF,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBzF,IAAA,OAAIwF,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEF,IAAI,CAACjF,KAAK,CAAK,CAAC,cAC3CN,IAAA,MAAAyF,QAAA,CAAIF,IAAI,CAAC/E,OAAO,CAAI,CAAC,CACpB+E,IAAI,CAACvB,SAAS,cACbhE,IAAA,QAAK0F,GAAG,CAAEH,IAAI,CAACvB,SAAU,CAAC2B,GAAG,CAAC,YAAY,CAACH,SAAS,CAAC,WAAW,CAAE,CAAC,CACjE,IAAI,cACRtF,KAAA,QAAKsF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BzF,IAAA,WAAQ4F,OAAO,CAAEA,CAAA,GAAMR,SAAS,CAACG,IAAI,CAAE,CAAAE,QAAA,CAAC,MAAI,CAAQ,CAAC,cACrDzF,IAAA,WAAQ4F,OAAO,CAAEA,CAAA,GAAMd,UAAU,CAACS,IAAI,CAACR,EAAE,CAAE,CAACc,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAL,QAAA,CAAC,QAErE,CAAQ,CAAC,EACN,CAAC,EACH,CACN,CAED,mBACEvF,KAAA,QAAKsF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBzF,IAAA,OAAIwF,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAC,UAAQ,CAAI,CAAC,cACpCvF,KAAA,QAAKsF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBzF,IAAA,UACEkD,IAAI,CAAC,MAAM,CACXsC,SAAS,CAAC,OAAO,CACjBO,WAAW,CAAC,OAAO,CACnBC,KAAK,CAAE1F,KAAM,CACb2F,QAAQ,CAAGC,CAAC,EAAK3F,QAAQ,CAAC2F,CAAC,CAAC5C,MAAM,CAAC0C,KAAK,CAAE,CAC3C,CAAC,cACFhG,IAAA,aACEwF,SAAS,CAAC,iBAAiB,CAC3BO,WAAW,CAAC,SAAS,CACrBC,KAAK,CAAExF,OAAQ,CACfyF,QAAQ,CAAGC,CAAC,EAAKzF,UAAU,CAACyF,CAAC,CAAC5C,MAAM,CAAC0C,KAAK,CAAE,CAC7C,CAAC,cACF9F,KAAA,QAAKsF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBzF,IAAA,WAAQ4F,OAAO,CAAE9C,SAAU,CAAA2C,QAAA,CAAC,YAAU,CAAQ,CAAC,CAC9C/E,KAAK,eACJV,IAAA,QAAK0F,GAAG,CAAEhF,KAAM,CAACiF,GAAG,CAAC,SAAS,CAACH,SAAS,CAAC,cAAc,CAAE,CAC1D,EACE,CAAC,cACNxF,IAAA,WAAQ4F,OAAO,CAAEnC,QAAS,CAAAgC,QAAA,CACvB7E,SAAS,CAAG,aAAa,CAAG,UAAU,CACjC,CAAC,EACN,CAAC,cACNZ,IAAA,QAAKwF,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBrF,KAAK,CAAC+F,GAAG,CAAEZ,IAAI,eACdvF,IAAA,QAAAyF,QAAA,CAAoBH,UAAU,CAACC,IAAI,CAAC,EAA1BA,IAAI,CAACR,EAA2B,CAC3C,CAAC,CACC,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}